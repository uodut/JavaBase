执行顺序：
	父类的静态代码块
	―>子类的静态代码块
	―>主方法（执行哪个程序就执行哪个程序的主方法）
	―>父类的非静态代码块
	―>父类的无参构造函数
	―>子类的非静态代码块
	―>子类的无参构造函数（若实际子类执行的是有参构造函数，则不执行无参构造函数）
	―>成员函数（指定执行哪个就执行哪个成员函数，若重写了父类成员函数，则只执行子类的成员函数）
接口和抽象类的区别：
	1.语法层面上的区别

　　1）抽象类可以提供成员方法的实现细节，而接口中只能存在public abstract 方法(静态除外)；

　　2）抽象类中的成员变量可以是各种类型的，而接口中的成员变量只能是public static final类型的；

　　3）接口中不能含有静态代码块，而抽象类可以有静态代码块和静态方法；

　　4）一个类只能继承一个抽象类，而一个类却可以实现多个接口。

	2.设计层面上的区别
   1)继承是一个 "是不是"的关系，而 接口 实现则是 "有没有"的关系。